// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  password    String
  createdAt   DateTime?    @default(now()) @db.Timestamp(6)
  credentials Credential[]
  notes       Note[]
  cards       Card[]
  network     Network[]

  @@map("users")
}

model Credential {
  id        Int      @id @default(autoincrement())
  userId    Int?
  title     String
  url       String
  username  String
  password  String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  users     User?    @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("credentials")
}

model Note {
  id        Int      @id @default(autoincrement())
  userId    Int?
  title     String
  content   String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  users     User?    @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("notes")
}

enum cardType {
  Credit
  Debit
  Both
}

model Card {
  id             Int      @id @default(autoincrement())
  userId         Int?
  title          String
  cardHolderName String
  number         String
  securityCode   String
  expirationDate String
  password       String
  virtual        Boolean
  type           cardType
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  users          User?    @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("cards")
}

model Network {
  id        Int      @id @default(autoincrement())
  userId    Int?
  title     String
  name      String
  password  String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  users     User?    @relation(fields: [userId], references: [id])

  @@map("networks")
}
